<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kepu.mapper.StBuildingrentContentMapper" >
  <resultMap id="BaseResultMap" type="com.kepu.pojo.StBuildingrentContent" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="lowprice" property="lowprice" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="lowsize" property="lowsize" jdbcType="DOUBLE" />
    <result column="sellType" property="selltype" jdbcType="INTEGER" />
    <result column="highprice" property="highprice" jdbcType="DECIMAL" />
    <result column="highsize" property="highsize" jdbcType="DOUBLE" />
    <result column="hourseTypeRequire" property="hoursetyperequire" jdbcType="VARCHAR" />
    <result column="locationRequire" property="locationrequire" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="trade" property="trade" jdbcType="INTEGER" />
    <result column="classifyName" property="classifyname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, title, introduce, realName, avatar, mobile, nickName, lowprice, state, createtime, 
    lowsize, sellType, highprice, highsize, hourseTypeRequire, locationRequire, userId, 
    trade, classifyName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kepu.pojo.StBuildingrentContentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_buildingrent_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from st_buildingrent_content
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from st_buildingrent_content
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kepu.pojo.StBuildingrentContentExample" >
    delete from st_buildingrent_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="uid" parameterType="com.kepu.pojo.StBuildingrentContent" >
    insert into st_buildingrent_content (uid, title, introduce, 
      realName, avatar, mobile, 
      nickName, lowprice, state, 
      createtime, lowsize, sellType, 
      highprice, highsize, hourseTypeRequire, 
      locationRequire, userId, trade, 
      classifyName)
    values (#{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{lowprice,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{lowsize,jdbcType=DOUBLE}, #{selltype,jdbcType=INTEGER}, 
      #{highprice,jdbcType=DECIMAL}, #{highsize,jdbcType=DOUBLE}, #{hoursetyperequire,jdbcType=VARCHAR}, 
      #{locationrequire,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{trade,jdbcType=INTEGER}, 
      #{classifyname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="uid" parameterType="com.kepu.pojo.StBuildingrentContent" >
    insert into st_buildingrent_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="lowprice != null" >
        lowprice,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="lowsize != null" >
        lowsize,
      </if>
      <if test="selltype != null" >
        sellType,
      </if>
      <if test="highprice != null" >
        highprice,
      </if>
      <if test="highsize != null" >
        highsize,
      </if>
      <if test="hoursetyperequire != null" >
        hourseTypeRequire,
      </if>
      <if test="locationrequire != null" >
        locationRequire,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="trade != null" >
        trade,
      </if>
      <if test="classifyname != null" >
        classifyName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="lowprice != null" >
        #{lowprice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lowsize != null" >
        #{lowsize,jdbcType=DOUBLE},
      </if>
      <if test="selltype != null" >
        #{selltype,jdbcType=INTEGER},
      </if>
      <if test="highprice != null" >
        #{highprice,jdbcType=DECIMAL},
      </if>
      <if test="highsize != null" >
        #{highsize,jdbcType=DOUBLE},
      </if>
      <if test="hoursetyperequire != null" >
        #{hoursetyperequire,jdbcType=VARCHAR},
      </if>
      <if test="locationrequire != null" >
        #{locationrequire,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="trade != null" >
        #{trade,jdbcType=INTEGER},
      </if>
      <if test="classifyname != null" >
        #{classifyname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kepu.pojo.StBuildingrentContentExample" resultType="java.lang.Integer" >
    select count(*) from st_buildingrent_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update st_buildingrent_content
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realName = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.lowprice != null" >
        lowprice = #{record.lowprice,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lowsize != null" >
        lowsize = #{record.lowsize,jdbcType=DOUBLE},
      </if>
      <if test="record.selltype != null" >
        sellType = #{record.selltype,jdbcType=INTEGER},
      </if>
      <if test="record.highprice != null" >
        highprice = #{record.highprice,jdbcType=DECIMAL},
      </if>
      <if test="record.highsize != null" >
        highsize = #{record.highsize,jdbcType=DOUBLE},
      </if>
      <if test="record.hoursetyperequire != null" >
        hourseTypeRequire = #{record.hoursetyperequire,jdbcType=VARCHAR},
      </if>
      <if test="record.locationrequire != null" >
        locationRequire = #{record.locationrequire,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.trade != null" >
        trade = #{record.trade,jdbcType=INTEGER},
      </if>
      <if test="record.classifyname != null" >
        classifyName = #{record.classifyname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update st_buildingrent_content
    set uid = #{record.uid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      realName = #{record.realname,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      lowprice = #{record.lowprice,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      lowsize = #{record.lowsize,jdbcType=DOUBLE},
      sellType = #{record.selltype,jdbcType=INTEGER},
      highprice = #{record.highprice,jdbcType=DECIMAL},
      highsize = #{record.highsize,jdbcType=DOUBLE},
      hourseTypeRequire = #{record.hoursetyperequire,jdbcType=VARCHAR},
      locationRequire = #{record.locationrequire,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      trade = #{record.trade,jdbcType=INTEGER},
      classifyName = #{record.classifyname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kepu.pojo.StBuildingrentContent" >
    update st_buildingrent_content
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="lowprice != null" >
        lowprice = #{lowprice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lowsize != null" >
        lowsize = #{lowsize,jdbcType=DOUBLE},
      </if>
      <if test="selltype != null" >
        sellType = #{selltype,jdbcType=INTEGER},
      </if>
      <if test="highprice != null" >
        highprice = #{highprice,jdbcType=DECIMAL},
      </if>
      <if test="highsize != null" >
        highsize = #{highsize,jdbcType=DOUBLE},
      </if>
      <if test="hoursetyperequire != null" >
        hourseTypeRequire = #{hoursetyperequire,jdbcType=VARCHAR},
      </if>
      <if test="locationrequire != null" >
        locationRequire = #{locationrequire,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="trade != null" >
        trade = #{trade,jdbcType=INTEGER},
      </if>
      <if test="classifyname != null" >
        classifyName = #{classifyname,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kepu.pojo.StBuildingrentContent" >
    update st_buildingrent_content
    set title = #{title,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      lowprice = #{lowprice,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      lowsize = #{lowsize,jdbcType=DOUBLE},
      sellType = #{selltype,jdbcType=INTEGER},
      highprice = #{highprice,jdbcType=DECIMAL},
      highsize = #{highsize,jdbcType=DOUBLE},
      hourseTypeRequire = #{hoursetyperequire,jdbcType=VARCHAR},
      locationRequire = #{locationrequire,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      trade = #{trade,jdbcType=INTEGER},
      classifyName = #{classifyname,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>