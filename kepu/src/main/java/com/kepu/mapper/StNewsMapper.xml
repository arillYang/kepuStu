<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kepu.mapper.StNewsMapper" >
  <resultMap id="BaseResultMap" type="com.kepu.pojo.StNews" >
    <id column="UID" property="uid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="classifyId" property="classifyid" jdbcType="INTEGER" />
    <result column="newsType" property="newstype" jdbcType="INTEGER" />
    <result column="newsStyle" property="newsstyle" jdbcType="INTEGER" />
    <result column="newsImages" property="newsimages" jdbcType="VARCHAR" />
    <result column="keywords" property="keywords" jdbcType="VARCHAR" />
    <result column="newsAuthor" property="newsauthor" jdbcType="VARCHAR" />
    <result column="stick" property="stick" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="view" property="view" jdbcType="INTEGER" />
    <result column="carousel" property="carousel" jdbcType="INTEGER" />
    <result column="likeCount" property="likecount" jdbcType="INTEGER" />
    <result column="commentCount" property="commentcount" jdbcType="INTEGER" />
    <result column="draft" property="draft" jdbcType="INTEGER" />
    <result column="voteNum" property="votenum" jdbcType="INTEGER" />
    <result column="disLikeNum" property="dislikenum" jdbcType="INTEGER" />
    <result column="fullUrl" property="fullurl" jdbcType="VARCHAR" />
     <result column="userName" property="username" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.kepu.pojo.StNews" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UID, title, classifyId, newsType, newsStyle, newsImages, keywords, newsAuthor, stick, 
    createTime, updateTime, state, view, carousel, likeCount, commentCount,draft, voteNum, 
    disLikeNum, fullUrl, userName
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.kepu.pojo.StNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from st_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} desc
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kepu.pojo.StNewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause} desc
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from st_news
    where UID = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from st_news
    where UID = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kepu.pojo.StNewsExample" >
    delete from st_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="uid" parameterType="com.kepu.pojo.StNews" >
    insert into st_news (UID, title, classifyId, 
      newsType, newsStyle, newsImages, 
      keywords, newsAuthor, stick, 
      createTime, updateTime, state, 
      view, carousel, likeCount, 
      commentCount, draft, voteNum, 
      disLikeNum, fullUrl,userName,content
      )
    values (#{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{classifyid,jdbcType=INTEGER}, 
      #{newstype,jdbcType=INTEGER}, #{newsstyle,jdbcType=INTEGER}, #{newsimages,jdbcType=VARCHAR}, 
      #{keywords,jdbcType=VARCHAR}, #{newsauthor,jdbcType=VARCHAR}, #{stick,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{view,jdbcType=INTEGER}, #{carousel,jdbcType=INTEGER}, #{likecount,jdbcType=INTEGER}, 
      #{commentcount,jdbcType=INTEGER}, #{draft,jdbcType=INTEGER}, #{votenum,jdbcType=INTEGER}, 
      #{dislikenum,jdbcType=INTEGER},  #{fullurl,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="uid" parameterType="com.kepu.pojo.StNews" >
    insert into st_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        UID,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="classifyid != null" >
        classifyId,
      </if>
      <if test="newstype != null" >
        newsType,
      </if>
      <if test="newsstyle != null" >
        newsStyle,
      </if>
      <if test="newsimages != null" >
        newsImages,
      </if>
      <if test="keywords != null" >
        keywords,
      </if>
      <if test="newsauthor != null" >
        newsAuthor,
      </if>
      <if test="stick != null" >
        stick,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="view != null" >
        view,
      </if>
      <if test="carousel != null" >
        carousel,
      </if>
      <if test="likecount != null" >
        likeCount,
      </if>
      <if test="commentcount != null" >
        commentCount,
      </if>
       <if test="draft != null" >
        draft,
      </if>
      <if test="votenum != null" >
        voteNum,
      </if>
      <if test="dislikenum != null" >
        disLikeNum,
      </if>
       <if test="fullurl != null" >
        fullUrl,
      </if>
       <if test="username != null" >
        userName,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="classifyid != null" >
        #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="newstype != null" >
        #{newstype,jdbcType=INTEGER},
      </if>
      <if test="newsstyle != null" >
        #{newsstyle,jdbcType=INTEGER},
      </if>
      <if test="newsimages != null" >
        #{newsimages,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="newsauthor != null" >
        #{newsauthor,jdbcType=VARCHAR},
      </if>
      <if test="stick != null" >
        #{stick,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        #{view,jdbcType=INTEGER},
      </if>
      <if test="carousel != null" >
        #{carousel,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="draft != null" >
        #{draft,jdbcType=INTEGER},
      </if>
      <if test="votenum != null" >
        #{votenum,jdbcType=INTEGER},
      </if>
      <if test="dislikenum != null" >
        #{dislikenum,jdbcType=INTEGER},
      </if>
     <if test="fullurl != null" >
        #{fullurl,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kepu.pojo.StNewsExample" resultType="java.lang.Integer" >
    select count(*) from st_news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update st_news
    <set >
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.classifyid != null" >
        classifyId = #{record.classifyid,jdbcType=INTEGER},
      </if>
      <if test="record.newstype != null" >
        newsType = #{record.newstype,jdbcType=INTEGER},
      </if>
      <if test="record.newsstyle != null" >
        newsStyle = #{record.newsstyle,jdbcType=INTEGER},
      </if>
      <if test="record.newsimages != null" >
        newsImages = #{record.newsimages,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null" >
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.newsauthor != null" >
        newsAuthor = #{record.newsauthor,jdbcType=VARCHAR},
      </if>
      <if test="record.stick != null" >
        stick = #{record.stick,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.view != null" >
        view = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.carousel != null" >
        carousel = #{record.carousel,jdbcType=INTEGER},
      </if>
      <if test="record.likecount != null" >
        likeCount = #{record.likecount,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null" >
        commentCount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.draft != null" >
        draft = #{record.draft,jdbcType=INTEGER},
      </if>
      <if test="record.votenum != null" >
        voteNum = #{record.votenum,jdbcType=INTEGER},
      </if>
      <if test="record.dislikenum != null" >
        disLikeNum = #{record.dislikenum,jdbcType=INTEGER},
      </if>
       <if test="record.fullurl != null" >
        fullUrl = #{record.fullurl,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update st_news
    set UID = #{record.uid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      classifyId = #{record.classifyid,jdbcType=INTEGER},
      newsType = #{record.newstype,jdbcType=INTEGER},
      newsStyle = #{record.newsstyle,jdbcType=INTEGER},
      newsImages = #{record.newsimages,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      newsAuthor = #{record.newsauthor,jdbcType=VARCHAR},
      stick = #{record.stick,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      view = #{record.view,jdbcType=INTEGER},
      carousel = #{record.carousel,jdbcType=INTEGER},
      likeCount = #{record.likecount,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      draft = #{record.draft,jdbcType=INTEGER},
      voteNum = #{record.votenum,jdbcType=INTEGER},
      disLikeNum = #{record.dislikenum,jdbcType=INTEGER},
      fullUrl = #{record.fullurl,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update st_news
    set UID = #{record.uid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      classifyId = #{record.classifyid,jdbcType=INTEGER},
      newsType = #{record.newstype,jdbcType=INTEGER},
      newsStyle = #{record.newsstyle,jdbcType=INTEGER},
      newsImages = #{record.newsimages,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      newsAuthor = #{record.newsauthor,jdbcType=VARCHAR},
      stick = #{record.stick,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      view = #{record.view,jdbcType=INTEGER},
      carousel = #{record.carousel,jdbcType=INTEGER},
      likeCount = #{record.likecount,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
       draft = #{record.draft,jdbcType=INTEGER},
      voteNum = #{record.votenum,jdbcType=INTEGER},
      disLikeNum = #{record.dislikenum,jdbcType=INTEGER},
      fullUrl = #{record.fullurl,jdbcType=VARCHAR},
       userName = #{record.username,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kepu.pojo.StNews" >
    update st_news
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="classifyid != null" >
        classifyId = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="newstype != null" >
        newsType = #{newstype,jdbcType=INTEGER},
      </if>
      <if test="newsstyle != null" >
        newsStyle = #{newsstyle,jdbcType=INTEGER},
      </if>
      <if test="newsimages != null" >
        newsImages = #{newsimages,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="newsauthor != null" >
        newsAuthor = #{newsauthor,jdbcType=VARCHAR},
      </if>
      <if test="stick != null" >
        stick = #{stick,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="carousel != null" >
        carousel = #{carousel,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="draft != null" >
        draft = #{draft,jdbcType=INTEGER},
      </if>
      <if test="votenum != null" >
        voteNum = #{votenum,jdbcType=INTEGER},
      </if>
      <if test="dislikenum != null" >
        disLikeNum = #{dislikenum,jdbcType=INTEGER},
      </if>
      <if test="fullurl != null" >
        fullUrl = #{fullurl,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where UID = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kepu.pojo.StNews" >
    update st_news
    set title = #{title,jdbcType=VARCHAR},
      classifyId = #{classifyid,jdbcType=INTEGER},
      newsType = #{newstype,jdbcType=INTEGER},
      newsStyle = #{newsstyle,jdbcType=INTEGER},
      newsImages = #{newsimages,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      newsAuthor = #{newsauthor,jdbcType=VARCHAR},
      stick = #{stick,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      view = #{view,jdbcType=INTEGER},
      carousel = #{carousel,jdbcType=INTEGER},
      likeCount = #{likecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      draft = #{draft,jdbcType=INTEGER},
      voteNum = #{votenum,jdbcType=INTEGER},
      disLikeNum = #{dislikenum,jdbcType=INTEGER},
       fullUrl = #{fullurl,jdbcType=VARCHAR},
        userName = #{username,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where UID = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kepu.pojo.StNews" >
    update st_news
    set title = #{title,jdbcType=VARCHAR},
      classifyId = #{classifyid,jdbcType=INTEGER},
      newsType = #{newstype,jdbcType=INTEGER},
      newsStyle = #{newsstyle,jdbcType=INTEGER},
      newsImages = #{newsimages,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      newsAuthor = #{newsauthor,jdbcType=VARCHAR},
      stick = #{stick,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      view = #{view,jdbcType=INTEGER},
      carousel = #{carousel,jdbcType=INTEGER},
      likeCount = #{likecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
       draft = #{draft,jdbcType=INTEGER},
      voteNum = #{votenum,jdbcType=INTEGER},
      disLikeNum = #{dislikenum,jdbcType=INTEGER},
      fullUrl = #{fullurl,jdbcType=VARCHAR},
       userName = #{username,jdbcType=VARCHAR}
    where UID = #{uid,jdbcType=INTEGER}
  </update>
</mapper>