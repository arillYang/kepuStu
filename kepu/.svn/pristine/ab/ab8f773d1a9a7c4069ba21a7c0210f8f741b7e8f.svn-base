package com.kepu.controller;


import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.druid.support.logging.Log;
import com.alibaba.druid.support.logging.LogFactory;
import com.kepu.constant.ResultConstant;
import com.kepu.mapper.OrderInfoMapper;
import com.kepu.mapper.StUserMapper;
import com.kepu.pojo.KePuResult;
import com.kepu.pojo.PageBean;
import com.kepu.pojo.WithdrawCash;
import com.kepu.service.WithdrawCashService;
import com.kepu.util.PageUtil;
import com.kepu.util.StringUtil;

@Controller
@RequestMapping("/withdrawCash")
public class WithdrawCashController {
	@Autowired
	private OrderInfoMapper orderInfomapper;
	@Autowired
	private WithdrawCashService withdrawCashService;
	@Autowired
	private StUserMapper stUserMapper;

	protected final Log logger = LogFactory.getLog(WithdrawCashController.class);
	
	
	// 查询个人兑换明细  request: buyUserId
		@RequestMapping("withdrawCashList")
		@ResponseBody
		public Object withdrawCashList(@RequestParam(value="page",required=false)String page,WithdrawCash withdrawCash,HttpServletRequest request){
			ModelAndView mav=new ModelAndView();
			HttpSession session=request.getSession();
			if(StringUtil.isEmpty(page)){
				page="1";
				session.setAttribute("withdrawCash", withdrawCash);
			}else{
				withdrawCash=(WithdrawCash) session.getAttribute("withdrawCash");
			}
			PageBean pageBean=new PageBean(Integer.parseInt(page),10);
			Map<String,Object> map=withdrawCashService.findWithdrawCash(pageBean, withdrawCash);
			List<WithdrawCash> withdrawCashList=(List<WithdrawCash>) map.get("list");
			return KePuResult.ok(ResultConstant.code_ok, "获取列表成功", withdrawCashList);
		}

		/*	// 修改积分明细
			@RequestMapping("PreUpdateWithdrawCash")
			public ModelAndView PreUpdateWithdrawCash(HttpServletRequest request) {
				ModelAndView mav = new ModelAndView();
				int ScoreDetailId = Integer.parseInt(request.getParameter("ScoreDetailId"));
				ScoreDetail scoreDetail2 = sdmapper.selectByPrimaryKey(ScoreDetailId);
				StUser stUser = userService.getUserById(scoreDetail2.getBuyUserId()); // 查找用户信息
				if (null != stUser.getNickname()) {
					mav.addObject("BuyUserName", stUser.getNickname());
				}
				mav.addObject("scoreDetail", scoreDetail2);
				mav.addObject("mainPage", "scoreDetail/scoreDetailUpdate.jsp");
				mav.setViewName("main");
				return mav;
			}

			// 修改积分明细
			@RequestMapping("UpdateWithdrawCash")
			public String UpdateWithdrawCash(ScoreDetail scoreDetail, HttpServletRequest request) {
				ModelAndView mav = new ModelAndView();
				int scoreDetail2 = sdmapper.updateByPrimaryKeySelective(scoreDetail);
				return "redirect:scoreDetailList";
			}*/
				
}

