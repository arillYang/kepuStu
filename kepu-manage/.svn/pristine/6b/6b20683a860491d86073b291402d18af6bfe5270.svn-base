package com.kepu.controller;


import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.druid.support.logging.Log;
import com.alibaba.druid.support.logging.LogFactory;
import com.kepu.mapper.OrderInfoMapper;
import com.kepu.mapper.StUserMapper;
import com.kepu.mapper.WithdrawCashMapper;
import com.kepu.pojo.PageBean;
import com.kepu.pojo.ScoreDetail;
import com.kepu.pojo.StUser;
import com.kepu.pojo.WithdrawCash;
import com.kepu.pojo.WithdrawCashExample;
import com.kepu.pojo.WithdrawCashExample.Criteria;
import com.kepu.service.UserService;
import com.kepu.service.WithdrawCashService;
import com.kepu.util.PageUtil;
import com.kepu.util.StringUtil;

@Controller
@RequestMapping("/withdrawCash")
public class WithdrawCashController {
	@Autowired
	private OrderInfoMapper orderInfomapper;
	@Autowired
	private WithdrawCashService withdrawCashService;
	@Autowired
	private UserService userService;
	@Autowired
	private StUserMapper stUserMapper;
	@Autowired
	private WithdrawCashMapper withdrawCashMapper;

	protected final Log logger = LogFactory.getLog(WithdrawCashController.class);
	
	// 查询订单列表
	@RequestMapping("withdrawCashList")
	public ModelAndView withdrawCashList(@RequestParam(value="page",required=false)String page,WithdrawCash withdrawCash,HttpServletRequest request){
		ModelAndView mav=new ModelAndView();
		HttpSession session=request.getSession();
		if(StringUtil.isEmpty(page)){
			page="1";
			session.setAttribute("withdrawCash", withdrawCash);
		}else{
			withdrawCash=(WithdrawCash) session.getAttribute("withdrawCash");
		}
		PageBean pageBean=new PageBean(Integer.parseInt(page),10);
		Map<String,Object> map=withdrawCashService.findWithdrawCash(pageBean, withdrawCash);
		List<WithdrawCash> withdrawCashList=(List<WithdrawCash>) map.get("list");
		long total=(Long) map.get("total");
		String pageCode=PageUtil.getPagation(request.getContextPath()+"/withdrawCash/withdrawCashList",  new Long(total).intValue(), Integer.parseInt(page), 10);
		mav.addObject("pageCode", pageCode);
		mav.addObject("withdrawCashList", withdrawCashList);
		mav.addObject("mainPage", "withdrawCash/withdrawCashList.jsp");
		mav.setViewName("main");
		return mav;
	}
	
	// 查询积分明细
			@RequestMapping("findwithdrawCashByUserId")
			public ModelAndView findWithdrawCashByUserId(HttpServletRequest request,WithdrawCash withdrawCash) {
				Integer buyUserId = Integer.valueOf(request.getParameter("buyUserId"));
				ModelAndView mav = new ModelAndView();
		        WithdrawCash withdrawCash2 =withdrawCashMapper.selectWithdrawCashByUserId(buyUserId);
				// 通过购买者的ID，查询对应的用户名
				StUser stUser = userService.getUserById(buyUserId); // 查找用户信息
				if (null != stUser.getNickname()) {
					mav.addObject("BuyUserName", stUser.getNickname());
				}
				mav.addObject("withdrawCash", withdrawCash2);
				mav.addObject("mainPage", "withdrawCash/withdrawCashDetail.jsp");
				mav.setViewName("main");
				return mav;
			}

			
				
}

